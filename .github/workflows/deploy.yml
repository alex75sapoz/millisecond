name: Deploy
run-name: ${{ inputs.apply && '[apply]' || '[plan]' }} ${{ inputs.environment }}

permissions:
  contents: read

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
      apply:
        type: boolean

concurrency:
  group: one-at-a-time

env:
  TF_CLOUD_ORGANIZATION: ${{ vars.TERRAFORM_ORGANIZATION_NAME }}
  TF_WORKSPACE: ${{ vars.TERRAFORM_WORKSPACE_NAME }}-${{ inputs.environment }}
  TF_API_TOKEN: ${{ secrets.TERRAFORM_API_TOKEN }}

jobs:
  deploy:
    runs-on: ubuntu-24.04-arm
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Python
        id: python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Dependencies
        run: |
          pip install --upgrade pip
          pip install --requirement requirements.txt
          python python_packages.py

      - name: Test
        id: test
        run: pytest

      - name: Configuration
        id: configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.3.2
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          speculative: ${{ !inputs.apply }}
          directory: ./terraform

      - name: Plan
        id: plan
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.3.2
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.configuration.outputs.configuration_version_id }}
          plan_only: ${{ !inputs.apply }}
          message: '[${{ github.ref_name }}]'

      - name: Output
        uses: hashicorp/tfc-workflows-github/actions/plan-output@v1.3.2
        id: output
        with:
          plan: ${{ fromJSON(steps.plan.outputs.payload).data.relationships.plan.data.id }}

      - name: Apply
        id: apply
        uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.3.2
        if: fromJSON(steps.plan.outputs.payload).data.attributes.actions.IsConfirmable
        with:
          run: ${{ steps.plan.outputs.run_id }}